#!/usr/bin/env python

from __future__ import print_function

import os
from optparse import OptionParser

from skadi.core.demo import Demo
from skadi.cli.delegate.creates_dts import CreatesServerEntities
from skadi.cli.delegate.processes_packets import ProcessesPackets
from skadi.cli.model.ent import tree

usage  = "usage: %prog [options] 12345678.dem ..."
parser = OptionParser(usage)
parser.add_option('-S', '--search',
    action="append",
    help="paths to be searched (in order) for demo files",
)

(options, args) = parser.parse_args()

# This is ghetto and only accepts arguments relative to
# project root, ex. demos/12345678.dem
pwd  = os.path.dirname(__file__)
root = os.path.join(pwd, '..')

for arg in args:
    path   = os.path.join(root, arg)
    replay = Demo(path)

    creates_dts = CreatesServerEntities()
    processes_packets       = ProcessesPackets()

    replay.register(creates_dts, Demo.SendTables)
    replay.register(processes_packets, Demo.Packet)
    replay.parse()

    tree    = tree.build_with(creates_dts.server_entities)
    printer = lambda depth, n: print('%s%s' % (depth * '  ', n.dt.name))
    tree.preorder(printer)